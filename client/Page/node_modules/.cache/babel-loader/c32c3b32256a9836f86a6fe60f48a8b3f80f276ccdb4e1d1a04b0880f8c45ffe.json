{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mamad\\\\OneDrive\\\\Teluq\\\\Teluq-computer\\\\INF1430\\\\Expensetracker\\\\client\\\\Page\\\\src\\\\TransactionsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { PieChart, Pie, Cell, Tooltip, Legend, ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid } from \"recharts\";\n\n// Define custom colors for each category\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categoryColors = {\n  \"Groceries\": \"#098903\",\n  \"Shopping\": \"#E5BA0B\",\n  \"Rent\": \"#33ff57\",\n  \"Utilities\": \"#3357ff\",\n  \"Transport\": \"#E4080A\",\n  \"Dining Out\": \"#0BA504\",\n  \"Entertainment\": \"#F7CA15\",\n  \"Food Delivery\": \"#089B00\",\n  \"Food\": \"#098403\",\n  \"Restaurant\": \"#0BA603\",\n  \"Fast Food\": \"#09B601\",\n  \"Gas Station\": \"#842401\",\n  \"Travel\": \"#E4080A\",\n  \"Convenience\": \"#E4080A\",\n  \"Subscription\": \"#00FADD\",\n  \"Services\": \"#00E3C9\",\n  \"Education\": \"#001AFA\",\n  \"Healthcare\": \"#EC69E4\",\n  \"Miscellaneous\": \"#EF8419\",\n  \"Home Improvement\": \"#9110DB\",\n  \"Vet\": \"#E981E1\",\n  \"Telecommunications\": \"#11DFC7\",\n  \"Transfer\": \"#F94AAA\",\n  \"Remove\": \"#000000\",\n  \"Other\": \"#888888\" // Default color for unlisted categories\n};\nconst CustomTooltip = ({\n  active,\n  payload\n}) => {\n  if (active && payload && payload.length) {\n    const {\n      name,\n      value,\n      percentage\n    } = payload[0].payload;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"white\",\n        padding: \"10px\",\n        border: \"1px solid #ddd\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Amount: $\", value.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Percentage: \", percentage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n  return null;\n};\n\n// Define reusable CategoryPieChart component\n_c = CustomTooltip;\nconst CategoryPieChart = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n  width: \"100%\",\n  height: 350,\n  children: /*#__PURE__*/_jsxDEV(PieChart, {\n    children: [/*#__PURE__*/_jsxDEV(Pie, {\n      data: data,\n      cx: \"50%\",\n      cy: \"40%\",\n      outerRadius: 100,\n      dataKey: \"value\",\n      label: false // ðŸ”¥ Removed labels\n      ,\n      children: data.map(entry => /*#__PURE__*/_jsxDEV(Cell, {\n        fill: categoryColors[entry.name] || categoryColors[\"Other\"]\n      }, entry.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Legend, {\n      layout: \"horizontal\",\n      align: \"center\",\n      verticalAlign: \"bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 5\n}, this);\n\n// Define reusable CategoryBarChart component\n_c2 = CategoryPieChart;\nconst CategoryBarChart = ({\n  data,\n  categories,\n  stackId\n}) => /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n  width: \"100%\",\n  height: 300,\n  children: /*#__PURE__*/_jsxDEV(BarChart, {\n    data: data,\n    barSize: 30,\n    children: [\" \", /*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: stackId ? \"month\" : \"date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), categories.map(category => /*#__PURE__*/_jsxDEV(Bar, {\n      dataKey: category,\n      stackId: stackId,\n      fill: categoryColors[category] || categoryColors[\"Other\"]\n    }, category, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 72,\n  columnNumber: 5\n}, this);\n_c3 = CategoryBarChart;\nconst TransactionsPage = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/transactions\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch transactions\");\n      }\n      return response.json();\n    }).then(data => {\n      const formattedData = data.map(txn => ({\n        ...txn,\n        amount: parseFloat(txn.amount)\n      }));\n      setTransactions(formattedData);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching transactions:\", error);\n      setError(error.message);\n      setLoading(false);\n    });\n  }, []);\n  const filterTransactionsByDate = () => {\n    return transactions.filter(txn => {\n      const txnDate = new Date(txn.date);\n      const start = startDate ? new Date(startDate) : null;\n      const end = endDate ? new Date(endDate) : null;\n      return (!start || txnDate >= start) && (!end || txnDate <= end);\n    });\n  };\n  const filteredTransactions = useMemo(() => filterTransactionsByDate(), [transactions, startDate, endDate]);\n  const aggregateSpendingByCategory = () => {\n    const categoryTotals = filteredTransactions.reduce((acc, txn) => {\n      acc[txn.category] = (acc[txn.category] || 0) + txn.amount;\n      return acc;\n    }, {});\n    const totalSpending = Object.values(categoryTotals).reduce((sum, value) => sum + value, 0);\n    const spendingData = Object.keys(categoryTotals).map(category => ({\n      name: category,\n      value: categoryTotals[category],\n      percentage: (categoryTotals[category] / totalSpending * 100).toFixed(2) + \"%\"\n    }));\n\n    // Define custom category order\n    const customOrder = [\"Food Delivery\", \"Groceries\", \"Restaurant\", \"Fast Food\", \"Food\", \"Travel\", \"Transport\", \"Convenience\", \"Convinience\", \"Entertainment\", \"Shopping\", \"Other\", \"Healthcare\", \"Vet\", \"Services\", \"Subscription\", \"Telecommunications\"];\n\n    // Sort categories according to custom order\n    spendingData.sort((a, b) => customOrder.indexOf(a.name) - customOrder.indexOf(b.name));\n    return spendingData;\n  };\n  const spendingByCategory = useMemo(() => aggregateSpendingByCategory(), [filteredTransactions]);\n  const aggregateSpendingByDate = () => {\n    const dailySpending = filteredTransactions.reduce((acc, txn) => {\n      if (!acc[txn.date]) {\n        acc[txn.date] = {};\n      }\n      acc[txn.date][txn.category] = (acc[txn.date][txn.category] || 0) + txn.amount;\n      return acc;\n    }, {});\n    return Object.keys(dailySpending).sort().map(date => ({\n      date,\n      ...dailySpending[date]\n    }));\n  };\n  const spendingByDate = useMemo(() => aggregateSpendingByDate(), [filteredTransactions]);\n  const aggregateSpendingByMonth = () => {\n    const monthlySpending = filteredTransactions.reduce((acc, txn) => {\n      const month = txn.date.substring(0, 7);\n      if (!acc[month]) {\n        acc[month] = {\n          total: 0\n        };\n      }\n      acc[month].total += txn.amount;\n      acc[month][txn.category] = (acc[month][txn.category] || 0) + txn.amount;\n      return acc;\n    }, {});\n    return Object.keys(monthlySpending).sort().map(month => ({\n      month,\n      ...monthlySpending[month]\n    }));\n  };\n  const spendingByMonth = useMemo(() => aggregateSpendingByMonth(), [filteredTransactions]);\n  const categories = [...new Set(transactions.map(txn => txn.category))];\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: \"Arial, sans-serif\",\n      padding: \"40px\",\n      backgroundColor: \"white\",\n      color: \"black\",\n      maxWidth: \"900px\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"2.2em\",\n        marginBottom: \"30px\"\n      },\n      children: \"Transaction List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowY: \"auto\",\n        maxHeight: \"300px\",\n        marginBottom: \"50px\",\n        border: \"1px solid #ddd\",\n        padding: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: \"100%\",\n          borderCollapse: \"collapse\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: \"#f4f4f4\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Bank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredTransactions.map((txn, index) => {\n            const categoryColor = categoryColors[txn.category] || categoryColors[\"Other\"];\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: txn.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", txn.amount.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: txn.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: txn.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: txn.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: txn.bank\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  backgroundColor: categoryColor,\n                  color: \"#fff\",\n                  padding: \"5px 3px\",\n                  textAlign: \"center\"\n                },\n                children: txn.category || \"Uncategorized\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"1.9em\",\n        marginBottom: \"30px\"\n      },\n      children: \"Spending by Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CategoryPieChart, {\n      data: spendingByCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"1.9em\",\n        marginTop: \"50px\",\n        marginBottom: \"30px\"\n      },\n      children: \"Daily Spending by Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CategoryBarChart, {\n      data: spendingByDate,\n      categories: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"1.9em\",\n        marginTop: \"50px\",\n        marginBottom: \"30px\"\n      },\n      children: \"Monthly Spending Breakdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CategoryBarChart, {\n      data: spendingByMonth,\n      categories: categories,\n      stackId: \"a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n};\n_s(TransactionsPage, \"u1R8OwUvTSny2rBt1NIBy/BuufY=\");\n_c4 = TransactionsPage;\nexport default TransactionsPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"CategoryPieChart\");\n$RefreshReg$(_c3, \"CategoryBarChart\");\n$RefreshReg$(_c4, \"TransactionsPage\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","PieChart","Pie","Cell","Tooltip","Legend","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","CartesianGrid","jsxDEV","_jsxDEV","categoryColors","CustomTooltip","active","payload","length","name","value","percentage","style","backgroundColor","padding","border","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","_c","CategoryPieChart","data","width","height","cx","cy","outerRadius","dataKey","label","map","entry","fill","content","layout","align","verticalAlign","_c2","CategoryBarChart","categories","stackId","barSize","strokeDasharray","category","_c3","TransactionsPage","_s","transactions","setTransactions","startDate","setStartDate","endDate","setEndDate","loading","setLoading","error","setError","fetch","then","response","ok","Error","json","formattedData","txn","amount","parseFloat","catch","console","message","filterTransactionsByDate","filter","txnDate","Date","date","start","end","filteredTransactions","aggregateSpendingByCategory","categoryTotals","reduce","acc","totalSpending","Object","values","sum","spendingData","keys","customOrder","sort","a","b","indexOf","spendingByCategory","aggregateSpendingByDate","dailySpending","spendingByDate","aggregateSpendingByMonth","monthlySpending","month","substring","total","spendingByMonth","Set","fontFamily","color","maxWidth","margin","textAlign","fontSize","marginBottom","overflowY","maxHeight","borderCollapse","index","categoryColor","id","description","time","bank","marginTop","_c4","$RefreshReg$"],"sources":["C:/Users/Mamad/OneDrive/Teluq/Teluq-computer/INF1430/Expensetracker/client/Page/src/TransactionsPage.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { PieChart, Pie, Cell, Tooltip, Legend, ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid } from \"recharts\";\r\n\r\n\r\n// Define custom colors for each category\r\nconst categoryColors = {\r\n    \"Groceries\": \"#098903\",\r\n    \"Shopping\": \"#E5BA0B\",\r\n    \"Rent\": \"#33ff57\",\r\n    \"Utilities\": \"#3357ff\",\r\n    \"Transport\": \"#E4080A\",\r\n    \"Dining Out\": \"#0BA504\",\r\n    \"Entertainment\": \"#F7CA15\",\r\n    \"Food Delivery\": \"#089B00\",\r\n    \"Food\": \"#098403\",\r\n    \"Restaurant\": \"#0BA603\",\r\n    \"Fast Food\":\"#09B601\",\r\n    \"Gas Station\": \"#842401\",\r\n    \"Travel\": \"#E4080A\",\r\n    \"Convenience\": \"#E4080A\",\r\n    \"Subscription\": \"#00FADD\",\r\n    \"Services\": \"#00E3C9\",\r\n    \"Education\": \"#001AFA\",\r\n    \"Healthcare\": \"#EC69E4\",\r\n    \"Miscellaneous\": \"#EF8419\",\r\n    \"Home Improvement\":\"#9110DB\",\r\n    \"Vet\": \"#E981E1\",\r\n    \"Telecommunications\":\"#11DFC7\",\r\n        \"Transfer\":\"#F94AAA\",\r\n        \"Remove\":\"#000000\",\r\n    \"Other\": \"#888888\" // Default color for unlisted categories\r\n};\r\nconst CustomTooltip = ({ active, payload }) => {\r\n    if (active && payload && payload.length) {\r\n        const { name, value, percentage } = payload[0].payload;\r\n        return (\r\n            <div style={{ backgroundColor: \"white\", padding: \"10px\", border: \"1px solid #ddd\" }}>\r\n                <p><strong>{name}</strong></p>\r\n                <p>Amount: ${value.toFixed(2)}</p>  {/* ðŸ”¥ Rounded amount */}\r\n                <p>Percentage: {percentage}</p>  {/* ðŸ”¥ Show percentage */}\r\n            </div>\r\n        );\r\n    }\r\n    return null;\r\n};\r\n\r\n\r\n// Define reusable CategoryPieChart component\r\nconst CategoryPieChart = ({ data }) => (\r\n    <ResponsiveContainer width=\"100%\" height={350}>\r\n        <PieChart>\r\n            <Pie\r\n                data={data}\r\n                cx=\"50%\"    \r\n                cy=\"40%\"\r\n                outerRadius={100}\r\n                dataKey=\"value\"\r\n                label={false} // ðŸ”¥ Removed labels\r\n            >\r\n                {data.map((entry) => (\r\n                    <Cell key={entry.name} fill={categoryColors[entry.name] || categoryColors[\"Other\"]} />\r\n                ))}\r\n            </Pie>\r\n            <Tooltip content={<CustomTooltip />} /> {/* ðŸ”¥ Custom Tooltip */}\r\n            <Legend layout=\"horizontal\" align=\"center\" verticalAlign=\"bottom\" />\r\n        </PieChart>\r\n    </ResponsiveContainer>\r\n);\r\n\r\n// Define reusable CategoryBarChart component\r\nconst CategoryBarChart = ({ data, categories, stackId }) => (\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n        <BarChart data={data} barSize={30}> {/* ðŸ”¥ Increased bar size */}\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey={stackId ? \"month\" : \"date\"} />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            {categories.map((category) => (\r\n                <Bar\r\n                    key={category}\r\n                    dataKey={category}\r\n                    stackId={stackId}\r\n                    fill={categoryColors[category] || categoryColors[\"Other\"]}\r\n                />\r\n            ))}\r\n        </BarChart>\r\n    </ResponsiveContainer>\r\n);\r\n\r\n\r\nconst TransactionsPage = () => {\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [startDate, setStartDate] = useState(\"\");\r\n    const [endDate, setEndDate] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:5000/api/transactions\")\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(\"Failed to fetch transactions\");\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                const formattedData = data.map(txn => ({\r\n                    ...txn,\r\n                    amount: parseFloat(txn.amount)\r\n                }));\r\n                setTransactions(formattedData);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching transactions:\", error);\r\n                setError(error.message);\r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    const filterTransactionsByDate = () => {\r\n        return transactions.filter(txn => {\r\n            const txnDate = new Date(txn.date);\r\n            const start = startDate ? new Date(startDate) : null;\r\n            const end = endDate ? new Date(endDate) : null;\r\n\r\n            return (!start || txnDate >= start) && (!end || txnDate <= end);\r\n        });\r\n    };\r\n\r\n    const filteredTransactions = useMemo(() => filterTransactionsByDate(), [transactions, startDate, endDate]);\r\n\r\n    const aggregateSpendingByCategory = () => {\r\n        const categoryTotals = filteredTransactions.reduce((acc, txn) => {\r\n            acc[txn.category] = (acc[txn.category] || 0) + txn.amount;\r\n            return acc;\r\n        }, {});\r\n\r\n        const totalSpending = Object.values(categoryTotals).reduce((sum, value) => sum + value, 0);\r\n\r\n        const spendingData = Object.keys(categoryTotals).map(category => ({\r\n            name: category,\r\n            value: categoryTotals[category],\r\n            percentage: ((categoryTotals[category] / totalSpending) * 100).toFixed(2) + \"%\"\r\n        }));\r\n\r\n        // Define custom category order\r\n        const customOrder = [\"Food Delivery\", \"Groceries\", \"Restaurant\",\"Fast Food\",\"Food\", \"Travel\", \"Transport\",\"Convenience\" ,\"Convinience\", \"Entertainment\",\"Shopping\", \"Other\",\"Healthcare\",\"Vet\",\"Services\",\"Subscription\",\"Telecommunications\"];\r\n\r\n        // Sort categories according to custom order\r\n        spendingData.sort((a, b) => customOrder.indexOf(a.name) - customOrder.indexOf(b.name));\r\n\r\n        return spendingData;\r\n    };\r\n\r\n    const spendingByCategory = useMemo(() => aggregateSpendingByCategory(), [filteredTransactions]);\r\n\r\n    const aggregateSpendingByDate = () => {\r\n        const dailySpending = filteredTransactions.reduce((acc, txn) => {\r\n            if (!acc[txn.date]) {\r\n                acc[txn.date] = {};\r\n            }\r\n            acc[txn.date][txn.category] = (acc[txn.date][txn.category] || 0) + txn.amount;\r\n            return acc;\r\n        }, {});\r\n\r\n        return Object.keys(dailySpending).sort().map(date => ({\r\n            date,\r\n            ...dailySpending[date]\r\n        }));\r\n    };\r\n\r\n    const spendingByDate = useMemo(() => aggregateSpendingByDate(), [filteredTransactions]);\r\n\r\n    const aggregateSpendingByMonth = () => {\r\n        const monthlySpending = filteredTransactions.reduce((acc, txn) => {\r\n            const month = txn.date.substring(0, 7);\r\n            if (!acc[month]) {\r\n                acc[month] = { total: 0 };\r\n            }\r\n            acc[month].total += txn.amount;\r\n            acc[month][txn.category] = (acc[month][txn.category] || 0) + txn.amount;\r\n            return acc;\r\n        }, {});\r\n\r\n        return Object.keys(monthlySpending).sort().map(month => ({\r\n            month,\r\n            ...monthlySpending[month]\r\n        }));\r\n    };\r\n\r\n    const spendingByMonth = useMemo(() => aggregateSpendingByMonth(), [filteredTransactions]);\r\n\r\n    const categories = [...new Set(transactions.map(txn => txn.category))];\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>Error: {error}</div>;\r\n\r\n    return (\r\n        <div style={{ fontFamily: \"Arial, sans-serif\", padding: \"40px\", backgroundColor: \"white\", color: \"black\", maxWidth: \"900px\", margin: \"auto\" }}>\r\n            <h1 style={{ textAlign: \"center\", fontSize: \"2.2em\", marginBottom: \"30px\" }}>Transaction List</h1>\r\n            <div style={{ overflowY: \"auto\", maxHeight: \"300px\", marginBottom: \"50px\", border: \"1px solid #ddd\", padding: \"10px\" }}>\r\n                <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n                    <thead>\r\n                        <tr style={{ backgroundColor: \"#f4f4f4\" }}>\r\n                            <th>ID</th>\r\n                            <th>Amount</th>\r\n                            <th>Description</th>\r\n                            <th>Date</th>\r\n                            <th>Time</th>\r\n                            <th>Bank</th>\r\n                            <th>Category</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n    {filteredTransactions.map((txn, index) => {\r\n        const categoryColor = categoryColors[txn.category] || categoryColors[\"Other\"];\r\n\r\n        return (\r\n            <tr key={index}>\r\n                <td>{txn.id}</td>\r\n                <td>${txn.amount.toFixed(2)}</td>\r\n                <td>{txn.description}</td>\r\n                <td>{txn.date}</td>\r\n                <td>{txn.time}</td>\r\n                <td>{txn.bank}</td>\r\n                {/* Apply category color only to this column */}\r\n                <td \r\n                    style={{\r\n                        backgroundColor: categoryColor,\r\n                        color: \"#fff\",\r\n                        padding: \"5px 3px\",\r\n                        textAlign: \"center\"\r\n                    }}\r\n                >\r\n                    {txn.category || \"Uncategorized\"}\r\n                </td>\r\n            </tr>\r\n        );\r\n    })}\r\n</tbody>\r\n\r\n                </table>\r\n            </div>\r\n            <h2 style={{ textAlign: \"center\", fontSize: \"1.9em\", marginBottom: \"30px\" }}>Spending by Category</h2>\r\n            <CategoryPieChart data={spendingByCategory} />\r\n            <h2 style={{ textAlign: \"center\", fontSize: \"1.9em\", marginTop: \"50px\", marginBottom: \"30px\" }}>Daily Spending by Category</h2>\r\n            <CategoryBarChart data={spendingByDate} categories={categories} />\r\n            <h2 style={{ textAlign: \"center\", fontSize: \"1.9em\", marginTop: \"50px\", marginBottom: \"30px\" }}>Monthly Spending Breakdown</h2>\r\n            <CategoryBarChart data={spendingByMonth} categories={categories} stackId=\"a\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TransactionsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAC3D,SAASC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,QAAQ,UAAU;;AAGhI;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAG;EACnB,WAAW,EAAE,SAAS;EACtB,UAAU,EAAE,SAAS;EACrB,MAAM,EAAE,SAAS;EACjB,WAAW,EAAE,SAAS;EACtB,WAAW,EAAE,SAAS;EACtB,YAAY,EAAE,SAAS;EACvB,eAAe,EAAE,SAAS;EAC1B,eAAe,EAAE,SAAS;EAC1B,MAAM,EAAE,SAAS;EACjB,YAAY,EAAE,SAAS;EACvB,WAAW,EAAC,SAAS;EACrB,aAAa,EAAE,SAAS;EACxB,QAAQ,EAAE,SAAS;EACnB,aAAa,EAAE,SAAS;EACxB,cAAc,EAAE,SAAS;EACzB,UAAU,EAAE,SAAS;EACrB,WAAW,EAAE,SAAS;EACtB,YAAY,EAAE,SAAS;EACvB,eAAe,EAAE,SAAS;EAC1B,kBAAkB,EAAC,SAAS;EAC5B,KAAK,EAAE,SAAS;EAChB,oBAAoB,EAAC,SAAS;EAC1B,UAAU,EAAC,SAAS;EACpB,QAAQ,EAAC,SAAS;EACtB,OAAO,EAAE,SAAS,CAAC;AACvB,CAAC;AACD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAC3C,IAAID,MAAM,IAAIC,OAAO,IAAIA,OAAO,CAACC,MAAM,EAAE;IACrC,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC;IAAW,CAAC,GAAGJ,OAAO,CAAC,CAAC,CAAC,CAACA,OAAO;IACtD,oBACIJ,OAAA;MAAKS,KAAK,EAAE;QAAEC,eAAe,EAAE,OAAO;QAAEC,OAAO,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAiB,CAAE;MAAAC,QAAA,gBAChFb,OAAA;QAAAa,QAAA,eAAGb,OAAA;UAAAa,QAAA,EAASP;QAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9BjB,OAAA;QAAAa,QAAA,GAAG,WAAS,EAACN,KAAK,CAACW,OAAO,CAAC,CAAC,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,MAAE,eACpCjB,OAAA;QAAAa,QAAA,GAAG,cAAY,EAACL,UAAU;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,MAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAEd;EACA,OAAO,IAAI;AACf,CAAC;;AAGD;AAAAE,EAAA,GAfMjB,aAAa;AAgBnB,MAAMkB,gBAAgB,GAAGA,CAAC;EAAEC;AAAK,CAAC,kBAC9BrB,OAAA,CAACP,mBAAmB;EAAC6B,KAAK,EAAC,MAAM;EAACC,MAAM,EAAE,GAAI;EAAAV,QAAA,eAC1Cb,OAAA,CAACZ,QAAQ;IAAAyB,QAAA,gBACLb,OAAA,CAACX,GAAG;MACAgC,IAAI,EAAEA,IAAK;MACXG,EAAE,EAAC,KAAK;MACRC,EAAE,EAAC,KAAK;MACRC,WAAW,EAAE,GAAI;MACjBC,OAAO,EAAC,OAAO;MACfC,KAAK,EAAE,KAAM,CAAC;MAAA;MAAAf,QAAA,EAEbQ,IAAI,CAACQ,GAAG,CAAEC,KAAK,iBACZ9B,OAAA,CAACV,IAAI;QAAkByC,IAAI,EAAE9B,cAAc,CAAC6B,KAAK,CAACxB,IAAI,CAAC,IAAIL,cAAc,CAAC,OAAO;MAAE,GAAxE6B,KAAK,CAACxB,IAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgE,CACxF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNjB,OAAA,CAACT,OAAO;MAACyC,OAAO,eAAEhC,OAAA,CAACE,aAAa;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eACxCjB,OAAA,CAACR,MAAM;MAACyC,MAAM,EAAC,YAAY;MAACC,KAAK,EAAC,QAAQ;MAACC,aAAa,EAAC;IAAQ;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACM,CACxB;;AAED;AAAAmB,GAAA,GArBMhB,gBAAgB;AAsBtB,MAAMiB,gBAAgB,GAAGA,CAAC;EAAEhB,IAAI;EAAEiB,UAAU;EAAEC;AAAQ,CAAC,kBACnDvC,OAAA,CAACP,mBAAmB;EAAC6B,KAAK,EAAC,MAAM;EAACC,MAAM,EAAE,GAAI;EAAAV,QAAA,eAC1Cb,OAAA,CAACN,QAAQ;IAAC2B,IAAI,EAAEA,IAAK;IAACmB,OAAO,EAAE,EAAG;IAAA3B,QAAA,GAAC,GAAC,eAChCb,OAAA,CAACF,aAAa;MAAC2C,eAAe,EAAC;IAAK;MAAA3B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCjB,OAAA,CAACJ,KAAK;MAAC+B,OAAO,EAAEY,OAAO,GAAG,OAAO,GAAG;IAAO;MAAAzB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9CjB,OAAA,CAACH,KAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACTjB,OAAA,CAACT,OAAO;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXjB,OAAA,CAACR,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACTqB,UAAU,CAACT,GAAG,CAAEa,QAAQ,iBACrB1C,OAAA,CAACL,GAAG;MAEAgC,OAAO,EAAEe,QAAS;MAClBH,OAAO,EAAEA,OAAQ;MACjBR,IAAI,EAAE9B,cAAc,CAACyC,QAAQ,CAAC,IAAIzC,cAAc,CAAC,OAAO;IAAE,GAHrDyC,QAAQ;MAAA5B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIhB,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACM,CACxB;AAAC0B,GAAA,GAlBIN,gBAAgB;AAqBtB,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC8D,SAAS,EAAEC,YAAY,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgE,OAAO,EAAEC,UAAU,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkE,OAAO,EAAEC,UAAU,CAAC,GAAGnE,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoE,KAAK,EAAEC,QAAQ,CAAC,GAAGrE,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZuE,KAAK,CAAC,wCAAwC,CAAC,CAC1CC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACnD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACpC,IAAI,IAAI;MACV,MAAMyC,aAAa,GAAGzC,IAAI,CAACQ,GAAG,CAACkC,GAAG,KAAK;QACnC,GAAGA,GAAG;QACNC,MAAM,EAAEC,UAAU,CAACF,GAAG,CAACC,MAAM;MACjC,CAAC,CAAC,CAAC;MACHjB,eAAe,CAACe,aAAa,CAAC;MAC9BT,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDa,KAAK,CAACZ,KAAK,IAAI;MACZa,OAAO,CAACb,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDC,QAAQ,CAACD,KAAK,CAACc,OAAO,CAAC;MACvBf,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgB,wBAAwB,GAAGA,CAAA,KAAM;IACnC,OAAOvB,YAAY,CAACwB,MAAM,CAACP,GAAG,IAAI;MAC9B,MAAMQ,OAAO,GAAG,IAAIC,IAAI,CAACT,GAAG,CAACU,IAAI,CAAC;MAClC,MAAMC,KAAK,GAAG1B,SAAS,GAAG,IAAIwB,IAAI,CAACxB,SAAS,CAAC,GAAG,IAAI;MACpD,MAAM2B,GAAG,GAAGzB,OAAO,GAAG,IAAIsB,IAAI,CAACtB,OAAO,CAAC,GAAG,IAAI;MAE9C,OAAO,CAAC,CAACwB,KAAK,IAAIH,OAAO,IAAIG,KAAK,MAAM,CAACC,GAAG,IAAIJ,OAAO,IAAII,GAAG,CAAC;IACnE,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,oBAAoB,GAAGzF,OAAO,CAAC,MAAMkF,wBAAwB,CAAC,CAAC,EAAE,CAACvB,YAAY,EAAEE,SAAS,EAAEE,OAAO,CAAC,CAAC;EAE1G,MAAM2B,2BAA2B,GAAGA,CAAA,KAAM;IACtC,MAAMC,cAAc,GAAGF,oBAAoB,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEjB,GAAG,KAAK;MAC7DiB,GAAG,CAACjB,GAAG,CAACrB,QAAQ,CAAC,GAAG,CAACsC,GAAG,CAACjB,GAAG,CAACrB,QAAQ,CAAC,IAAI,CAAC,IAAIqB,GAAG,CAACC,MAAM;MACzD,OAAOgB,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,MAAMC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACL,cAAc,CAAC,CAACC,MAAM,CAAC,CAACK,GAAG,EAAE7E,KAAK,KAAK6E,GAAG,GAAG7E,KAAK,EAAE,CAAC,CAAC;IAE1F,MAAM8E,YAAY,GAAGH,MAAM,CAACI,IAAI,CAACR,cAAc,CAAC,CAACjD,GAAG,CAACa,QAAQ,KAAK;MAC9DpC,IAAI,EAAEoC,QAAQ;MACdnC,KAAK,EAAEuE,cAAc,CAACpC,QAAQ,CAAC;MAC/BlC,UAAU,EAAE,CAAEsE,cAAc,CAACpC,QAAQ,CAAC,GAAGuC,aAAa,GAAI,GAAG,EAAE/D,OAAO,CAAC,CAAC,CAAC,GAAG;IAChF,CAAC,CAAC,CAAC;;IAEH;IACA,MAAMqE,WAAW,GAAG,CAAC,eAAe,EAAE,WAAW,EAAE,YAAY,EAAC,WAAW,EAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAC,aAAa,EAAE,aAAa,EAAE,eAAe,EAAC,UAAU,EAAE,OAAO,EAAC,YAAY,EAAC,KAAK,EAAC,UAAU,EAAC,cAAc,EAAC,oBAAoB,CAAC;;IAE9O;IACAF,YAAY,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKH,WAAW,CAACI,OAAO,CAACF,CAAC,CAACnF,IAAI,CAAC,GAAGiF,WAAW,CAACI,OAAO,CAACD,CAAC,CAACpF,IAAI,CAAC,CAAC;IAEtF,OAAO+E,YAAY;EACvB,CAAC;EAED,MAAMO,kBAAkB,GAAGzG,OAAO,CAAC,MAAM0F,2BAA2B,CAAC,CAAC,EAAE,CAACD,oBAAoB,CAAC,CAAC;EAE/F,MAAMiB,uBAAuB,GAAGA,CAAA,KAAM;IAClC,MAAMC,aAAa,GAAGlB,oBAAoB,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEjB,GAAG,KAAK;MAC5D,IAAI,CAACiB,GAAG,CAACjB,GAAG,CAACU,IAAI,CAAC,EAAE;QAChBO,GAAG,CAACjB,GAAG,CAACU,IAAI,CAAC,GAAG,CAAC,CAAC;MACtB;MACAO,GAAG,CAACjB,GAAG,CAACU,IAAI,CAAC,CAACV,GAAG,CAACrB,QAAQ,CAAC,GAAG,CAACsC,GAAG,CAACjB,GAAG,CAACU,IAAI,CAAC,CAACV,GAAG,CAACrB,QAAQ,CAAC,IAAI,CAAC,IAAIqB,GAAG,CAACC,MAAM;MAC7E,OAAOgB,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,OAAOE,MAAM,CAACI,IAAI,CAACQ,aAAa,CAAC,CAACN,IAAI,CAAC,CAAC,CAAC3D,GAAG,CAAC4C,IAAI,KAAK;MAClDA,IAAI;MACJ,GAAGqB,aAAa,CAACrB,IAAI;IACzB,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMsB,cAAc,GAAG5G,OAAO,CAAC,MAAM0G,uBAAuB,CAAC,CAAC,EAAE,CAACjB,oBAAoB,CAAC,CAAC;EAEvF,MAAMoB,wBAAwB,GAAGA,CAAA,KAAM;IACnC,MAAMC,eAAe,GAAGrB,oBAAoB,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEjB,GAAG,KAAK;MAC9D,MAAMmC,KAAK,GAAGnC,GAAG,CAACU,IAAI,CAAC0B,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;MACtC,IAAI,CAACnB,GAAG,CAACkB,KAAK,CAAC,EAAE;QACblB,GAAG,CAACkB,KAAK,CAAC,GAAG;UAAEE,KAAK,EAAE;QAAE,CAAC;MAC7B;MACApB,GAAG,CAACkB,KAAK,CAAC,CAACE,KAAK,IAAIrC,GAAG,CAACC,MAAM;MAC9BgB,GAAG,CAACkB,KAAK,CAAC,CAACnC,GAAG,CAACrB,QAAQ,CAAC,GAAG,CAACsC,GAAG,CAACkB,KAAK,CAAC,CAACnC,GAAG,CAACrB,QAAQ,CAAC,IAAI,CAAC,IAAIqB,GAAG,CAACC,MAAM;MACvE,OAAOgB,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,OAAOE,MAAM,CAACI,IAAI,CAACW,eAAe,CAAC,CAACT,IAAI,CAAC,CAAC,CAAC3D,GAAG,CAACqE,KAAK,KAAK;MACrDA,KAAK;MACL,GAAGD,eAAe,CAACC,KAAK;IAC5B,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMG,eAAe,GAAGlH,OAAO,CAAC,MAAM6G,wBAAwB,CAAC,CAAC,EAAE,CAACpB,oBAAoB,CAAC,CAAC;EAEzF,MAAMtC,UAAU,GAAG,CAAC,GAAG,IAAIgE,GAAG,CAACxD,YAAY,CAACjB,GAAG,CAACkC,GAAG,IAAIA,GAAG,CAACrB,QAAQ,CAAC,CAAC,CAAC;EAEtE,IAAIU,OAAO,EAAE,oBAAOpD,OAAA;IAAAa,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIqC,KAAK,EAAE,oBAAOtD,OAAA;IAAAa,QAAA,GAAK,SAAO,EAACyC,KAAK;EAAA;IAAAxC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3C,oBACIjB,OAAA;IAAKS,KAAK,EAAE;MAAE8F,UAAU,EAAE,mBAAmB;MAAE5F,OAAO,EAAE,MAAM;MAAED,eAAe,EAAE,OAAO;MAAE8F,KAAK,EAAE,OAAO;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAA7F,QAAA,gBAC1Ib,OAAA;MAAIS,KAAK,EAAE;QAAEkG,SAAS,EAAE,QAAQ;QAAEC,QAAQ,EAAE,OAAO;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAhG,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClGjB,OAAA;MAAKS,KAAK,EAAE;QAAEqG,SAAS,EAAE,MAAM;QAAEC,SAAS,EAAE,OAAO;QAAEF,YAAY,EAAE,MAAM;QAAEjG,MAAM,EAAE,gBAAgB;QAAED,OAAO,EAAE;MAAO,CAAE;MAAAE,QAAA,eACnHb,OAAA;QAAOS,KAAK,EAAE;UAAEa,KAAK,EAAE,MAAM;UAAE0F,cAAc,EAAE;QAAW,CAAE;QAAAnG,QAAA,gBACxDb,OAAA;UAAAa,QAAA,eACIb,OAAA;YAAIS,KAAK,EAAE;cAAEC,eAAe,EAAE;YAAU,CAAE;YAAAG,QAAA,gBACtCb,OAAA;cAAAa,QAAA,EAAI;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACXjB,OAAA;cAAAa,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACfjB,OAAA;cAAAa,QAAA,EAAI;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBjB,OAAA;cAAAa,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbjB,OAAA;cAAAa,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbjB,OAAA;cAAAa,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbjB,OAAA;cAAAa,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACRjB,OAAA;UAAAa,QAAA,EACf+D,oBAAoB,CAAC/C,GAAG,CAAC,CAACkC,GAAG,EAAEkD,KAAK,KAAK;YACtC,MAAMC,aAAa,GAAGjH,cAAc,CAAC8D,GAAG,CAACrB,QAAQ,CAAC,IAAIzC,cAAc,CAAC,OAAO,CAAC;YAE7E,oBACID,OAAA;cAAAa,QAAA,gBACIb,OAAA;gBAAAa,QAAA,EAAKkD,GAAG,CAACoD;cAAE;gBAAArG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjBjB,OAAA;gBAAAa,QAAA,GAAI,GAAC,EAACkD,GAAG,CAACC,MAAM,CAAC9C,OAAO,CAAC,CAAC,CAAC;cAAA;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjCjB,OAAA;gBAAAa,QAAA,EAAKkD,GAAG,CAACqD;cAAW;gBAAAtG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC1BjB,OAAA;gBAAAa,QAAA,EAAKkD,GAAG,CAACU;cAAI;gBAAA3D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACnBjB,OAAA;gBAAAa,QAAA,EAAKkD,GAAG,CAACsD;cAAI;gBAAAvG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACnBjB,OAAA;gBAAAa,QAAA,EAAKkD,GAAG,CAACuD;cAAI;gBAAAxG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAEnBjB,OAAA;gBACIS,KAAK,EAAE;kBACHC,eAAe,EAAEwG,aAAa;kBAC9BV,KAAK,EAAE,MAAM;kBACb7F,OAAO,EAAE,SAAS;kBAClBgG,SAAS,EAAE;gBACf,CAAE;gBAAA9F,QAAA,EAEDkD,GAAG,CAACrB,QAAQ,IAAI;cAAe;gBAAA5B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC;YAAA,GAjBAgG,KAAK;cAAAnG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAkBV,CAAC;UAEb,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEe;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACNjB,OAAA;MAAIS,KAAK,EAAE;QAAEkG,SAAS,EAAE,QAAQ;QAAEC,QAAQ,EAAE,OAAO;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAhG,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtGjB,OAAA,CAACoB,gBAAgB;MAACC,IAAI,EAAEuE;IAAmB;MAAA9E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9CjB,OAAA;MAAIS,KAAK,EAAE;QAAEkG,SAAS,EAAE,QAAQ;QAAEC,QAAQ,EAAE,OAAO;QAAEW,SAAS,EAAE,MAAM;QAAEV,YAAY,EAAE;MAAO,CAAE;MAAAhG,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/HjB,OAAA,CAACqC,gBAAgB;MAAChB,IAAI,EAAE0E,cAAe;MAACzD,UAAU,EAAEA;IAAW;MAAAxB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClEjB,OAAA;MAAIS,KAAK,EAAE;QAAEkG,SAAS,EAAE,QAAQ;QAAEC,QAAQ,EAAE,OAAO;QAAEW,SAAS,EAAE,MAAM;QAAEV,YAAY,EAAE;MAAO,CAAE;MAAAhG,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/HjB,OAAA,CAACqC,gBAAgB;MAAChB,IAAI,EAAEgF,eAAgB;MAAC/D,UAAU,EAAEA,UAAW;MAACC,OAAO,EAAC;IAAG;MAAAzB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAEd,CAAC;AAAC4B,EAAA,CAlKID,gBAAgB;AAAA4E,GAAA,GAAhB5E,gBAAgB;AAoKtB,eAAeA,gBAAgB;AAAC,IAAAzB,EAAA,EAAAiB,GAAA,EAAAO,GAAA,EAAA6E,GAAA;AAAAC,YAAA,CAAAtG,EAAA;AAAAsG,YAAA,CAAArF,GAAA;AAAAqF,YAAA,CAAA9E,GAAA;AAAA8E,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}